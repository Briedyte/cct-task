{"version":3,"sources":["components/styled/Global.ts","components/styled/MainContainer.styled.ts","components/styled/OrderedList.styled.ts","components/styled/UnorderedList.styled.ts","components/Step.tsx","components/StepsList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["createGlobalStyle","theme","colors","background","text","primary","MainContainer","styled","main","media","OrderedList","ol","OrderedItem","li","props","statusLineWidth","UnorderedList","ul","Step","step","activeStep","setActiveStep","id","title","subSteps","isActive","ulRef","useRef","ulHeight","current","scrollHeight","AnimatedUl","animated","expand","useSpring","to","height","opacity","config","tension","friction","onClick","ref","style","map","subStep","index","StepsList","useState","App","Global","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAOeA,cAAf,6iBAHM,6CAcgB,qBAAGC,MAAkBC,OAAOC,cAChC,qBAAGF,MAAkBC,OAAOE,QAiB5B,qBAAGH,MAAkBC,OAAOG,WC9BjCC,EAAgBC,IAAOC,KAAV,6HAHpB,8C,OCGAC,EACA,4CAGOC,EAAcH,IAAOI,GAAV,sHAOXC,EAAcL,IAAOM,GAAV,o5BAUlBJ,GAWc,qBAAGR,MAAkBC,OAAOG,UAIxCI,GASY,qBAAGR,MAAkBC,OAAOG,WAEjC,SAACS,GAAD,OACPA,EAAMC,gBAAkBD,EAAMC,gBAAkB,MAEhDN,G,yBCpDKO,EAAgBT,IAAOU,GAAV,0aAFT,O,OC6CFC,EA/Be,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cACzCC,EAAwBH,EAAxBG,GAAIC,EAAoBJ,EAApBI,MAAOC,EAAaL,EAAbK,SACbC,EAAWH,IAAOF,EAElBM,EAAQC,iBAAyB,MACjCC,EAAWF,EAAMG,QAAUH,EAAMG,QAAQC,aAAe,EACxDC,EAAaC,mBAAShB,GAEtBiB,EAASC,oBAAU,CACvBC,GAAI,CAAEC,OAAQX,EAAWG,EAAW,EAAGS,QAASZ,EAAW,EAAI,GAC/Da,OAAQ,CAAEC,QAAS,IAAKC,SAAU,MAGpC,OACE,cAAC,IAAD,UACE,eAAC5B,EAAD,CACE6B,QAAS,kBAAuCpB,EAA/BI,EAA6C,EAApBH,IAC1CP,gBAAkBU,EAAiB,IAAN,IAF/B,UAIE,6BAAKF,IAEL,cAACQ,EAAD,CAAYW,IAAKhB,EAAOiB,MAAOV,EAA/B,SACGT,EAASoB,KAAI,SAACC,EAASC,GAAV,OACZ,6BAAiBD,GAARC,cCYNC,EA/Ca,WAC1B,MAAoCC,mBAAS,GAA7C,mBAAO5B,EAAP,KAAmBC,EAAnB,KAgCA,OACE,cAACX,EAAD,UA/BY,CACZ,CACEY,GAAI,EACJC,MAAO,kBACPC,SAAU,CACR,oBACA,oBACA,4BAGJ,CACEF,GAAI,EACJC,MAAO,wBACPC,SAAU,CACR,oBACA,6DAGJ,CACEF,GAAI,EACJC,MAAO,gCACPC,SAAU,CAAC,eAAgB,wBAE7B,CACEF,GAAI,EACJC,MAAO,iBACPC,SAAU,CAAC,kBAAmB,0BAMvBoB,KAAI,SAACzB,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,WAAYA,EACZC,cAAeA,GAHVF,EAAKG,UCpCdrB,EAAQ,CACZC,OAAQ,CACNG,QAAS,UACTF,WAAY,UACZC,KAAM,YAmBK6C,MAff,WACE,OACE,mCACE,eAAC,IAAD,CAAehD,MAAOA,EAAtB,UACE,cAACiD,EAAD,IACA,eAAC5C,EAAD,WACE,iDACA,cAAC,EAAD,aCNK6C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a79c184c.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport { theme } from \"../../App\";\r\n\r\nconst media = {\r\n  xs: \"@media only screen and (max-width: 576px)\",\r\n};\r\n\r\nexport default createGlobalStyle<{ theme: typeof theme }>`\r\n    * {\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n        ${media.xs} {\r\n            font-size: 14px;\r\n        }\r\n    }\r\n\r\n    body {\r\n        background: ${({ theme }) => theme.colors.background};\r\n        color:  ${({ theme }) => theme.colors.text};\r\n        font-family: 'Manrope', sans-serif;\r\n        font-weight: 700;\r\n        margin: 0;\r\n    }\r\n\r\n    h1 {\r\n        font-size: 4rem;\r\n        margin-bottom: 29px;\r\n        color: #000000;\r\n    }\r\n\r\n    li, h2 {\r\n        font-size: 18px;\r\n    }\r\n\r\n    a {\r\n        color:  ${({ theme }) => theme.colors.primary};\r\n        text-decoration: none;\r\n    }\r\n\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nconst media = {\r\n  xl: \"@media only screen and (max-width: 1400px)\",\r\n};\r\n\r\nexport const MainContainer = styled.main`\r\n  width: 1400px;\r\n  padding: 2.5rem 1.25rem;\r\n  margin: 0 auto;\r\n\r\n  ${media.xl} {\r\n    width: 98%;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  statusLineWidth: number;\r\n}\r\n\r\nconst media = {\r\n  xs: \"@media only screen and (max-width: 576px)\",\r\n};\r\n\r\nexport const OrderedList = styled.ol`\r\n  width: 100%;\r\n  list-style: none;\r\n  counter-reset: steps-counter;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const OrderedItem = styled.li<Props>`\r\n  width: 100%;\r\n  list-style-position: inside;\r\n  margin-bottom: 1.25rem;\r\n  max-width: 100%;\r\n  counter-increment: steps-counter;\r\n\r\n  h2 {\r\n    box-shadow: 3px 3px 15px rgba(0, 0, 0, 0.161);\r\n    width: 100%;\r\n    ${media.xs} {\r\n      text-align: center;\r\n    }\r\n\r\n    &:before {\r\n      content: counter(steps-counter);\r\n      font-size: 2.25rem;\r\n      display: inline-block;\r\n      width: 50px;\r\n      height: 53px;\r\n      text-align: center;\r\n      background: ${({ theme }) => theme.colors.primary};\r\n      background: linear-gradient(180deg, #00a9a7 0%, #00ba89 100%);\r\n      color: white;\r\n      margin: 16px 36px 16px 30px;\r\n      ${media.xs} {\r\n        display: block;\r\n        margin-top: 0.5rem;\r\n      }\r\n    }\r\n\r\n    &:after {\r\n      content: \"\";\r\n      display: block;\r\n      background: ${({ theme }) => theme.colors.primary};\r\n      height: 2px;\r\n      width: ${(props) =>\r\n        props.statusLineWidth ? props.statusLineWidth : 200}px;\r\n      transition: 0.5s all;\r\n      ${media.xs} {\r\n        margin-top: 1rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nconst iconSize = 21;\r\n\r\nexport const UnorderedList = styled.ul`\r\n  padding: 0 4rem;\r\n  vertical-align: middle;\r\n  overflow: hidden;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 400;\r\n\r\n  li {\r\n    margin: 0;\r\n    margin-top: 1.25rem;\r\n    padding-left: calc(${iconSize}px + 21px);\r\n    list-style: none;\r\n    background-image: url(\"./images/radio.svg\");\r\n    background-repeat: no-repeat;\r\n    background-position: left center;\r\n    background-size: ${iconSize}px;\r\n  }\r\n`;\r\n","import Linkify from \"react-linkify\";\r\nimport { useRef } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { OrderedItem } from \"./styled/OrderedList.styled\";\r\nimport { UnorderedList } from \"./styled/UnorderedList.styled\";\r\n\r\ninterface Props {\r\n  step: {\r\n    id: number;\r\n    title: string;\r\n    subSteps: string[];\r\n  };\r\n  activeStep: number;\r\n  setActiveStep: React.Dispatch<number>;\r\n}\r\n\r\nconst Step: React.FC<Props> = ({ step, activeStep, setActiveStep }) => {\r\n  const { id, title, subSteps } = step;\r\n  const isActive = id === activeStep;\r\n\r\n  const ulRef = useRef<HTMLUListElement>(null);\r\n  const ulHeight = ulRef.current ? ulRef.current.scrollHeight : 0;\r\n  const AnimatedUl = animated(UnorderedList);\r\n\r\n  const expand = useSpring({\r\n    to: { height: isActive ? ulHeight : 0, opacity: isActive ? 1 : 0 },\r\n    config: { tension: 120, friction: 30 },\r\n  });\r\n\r\n  return (\r\n    <Linkify>\r\n      <OrderedItem\r\n        onClick={() => (!isActive ? setActiveStep(id) : setActiveStep(0))}\r\n        statusLineWidth={!isActive ? 200 : 300}\r\n      >\r\n        <h2>{title}</h2>\r\n\r\n        <AnimatedUl ref={ulRef} style={expand}>\r\n          {subSteps.map((subStep, index) => (\r\n            <li key={index}>{subStep}</li>\r\n          ))}\r\n        </AnimatedUl>\r\n      </OrderedItem>\r\n    </Linkify>\r\n  );\r\n};\r\n\r\nexport default Step;\r\n","import { useState } from \"react\";\r\nimport { OrderedList } from \"./styled/OrderedList.styled\";\r\nimport Step from \"./Step\";\r\n\r\nconst StepsList: React.FC = () => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n\r\n  const steps = [\r\n    {\r\n      id: 1,\r\n      title: \"Build test task\",\r\n      subSteps: [\r\n        \"Create repository\",\r\n        \"Implement designs\",\r\n        \"Implement functionality\",\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Submit your test task\",\r\n      subSteps: [\r\n        \"Open email client\",\r\n        \"Sent link with information to careers@cornercasetech.com\",\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Participate in tech interview\",\r\n      subSteps: [\"Talk with HR\", \"Talk with Tech team\"],\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Receive answer\",\r\n      subSteps: [\"Receive answers\", \"Start your IT career\"],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <OrderedList>\r\n      {steps.map((step) => (\r\n        <Step\r\n          key={step.id}\r\n          step={step}\r\n          activeStep={activeStep}\r\n          setActiveStep={setActiveStep}\r\n        />\r\n      ))}\r\n    </OrderedList>\r\n  );\r\n};\r\n\r\nexport default StepsList;\r\n","import GlobalStyles from \"./components/styled/Global\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { MainContainer } from \"./components/styled/MainContainer.styled\";\r\nimport StepsList from \"./components/StepsList\";\r\n\r\nconst theme = {\r\n  colors: {\r\n    primary: \"#00ADAA\",\r\n    background: \"#FFFFFF\",\r\n    text: \"#0E2A35\",\r\n  },\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyles />\r\n        <MainContainer>\r\n          <h1>CCT Lab Process</h1>\r\n          <StepsList />\r\n        </MainContainer>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { theme };\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}