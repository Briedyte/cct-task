{"version":3,"sources":["components/styled/Global.ts","components/styled/MainContainer.styled.ts","components/styled/OrderedList.styled.ts","components/styled/UnorderedList.styled.ts","components/Step.tsx","components/StepsList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["createGlobalStyle","MainContainer","styled","main","OrderedList","ol","OrderedItem","li","props","statusLineWidth","UnorderedList","ul","Step","step","activeStep","setActiveStep","id","title","subSteps","isActive","ulRef","useRef","ulHeight","current","scrollHeight","AnimatedUl","animated","expand","useSpring","height","opacity","onClick","ref","style","map","subStep","index","StepsList","useState","App","Global","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAEeA,cAAf,qcCAaC,EAAgBC,IAAOC,KAAV,oL,OCIbC,EAAcF,IAAOG,GAAV,kGAMXC,EAAcJ,IAAOK,GAAV,6uBA6BT,SAACC,GAAD,OACPA,EAAMC,gBAAkBD,EAAMC,gBAAkB,O,iBCtC3CC,EAAgBR,IAAOS,GAAV,goBAFT,O,eC4CFC,EA9Be,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cACzCC,EAAwBH,EAAxBG,GAAIC,EAAoBJ,EAApBI,MAAOC,EAAaL,EAAbK,SACbC,EAAWH,IAAOF,EAElBM,EAAQC,iBAAyB,MACjCC,EAAWF,EAAMG,QAAUH,EAAMG,QAAQC,aAAe,EACxDC,EAAaC,mBAAShB,GAEtBiB,EAASC,oBAAU,CACvBC,OAAQV,EAAWG,EAAW,EAC9BQ,QAASX,EAAW,EAAI,IAG1B,OACE,cAAC,IAAD,UACE,eAACb,EAAD,CACEyB,QAAS,kBAAuChB,EAA/BI,EAA6C,EAApBH,IAC1CP,gBAAkBU,EAAiB,IAAN,IAF/B,UAIE,6BAAKF,IACL,cAACQ,EAAD,CAAYO,IAAKZ,EAAOa,MAAON,EAA/B,SACGT,EAASgB,KAAI,SAACC,EAASC,GAAV,OACZ,6BAAiBD,GAARC,cCaNC,EA/Ca,WAC1B,MAAoCC,mBAAS,GAA7C,mBAAOxB,EAAP,KAAmBC,EAAnB,KAgCA,OACE,cAACX,EAAD,UA/BY,CACZ,CACEY,GAAI,EACJC,MAAO,kBACPC,SAAU,CACR,oBACA,oBACA,4BAGJ,CACEF,GAAI,EACJC,MAAO,wBACPC,SAAU,CACR,oBACA,6DAGJ,CACEF,GAAI,EACJC,MAAO,gCACPC,SAAU,CAAC,eAAgB,wBAE7B,CACEF,GAAI,EACJC,MAAO,iBACPC,SAAU,CAAC,kBAAmB,0BAMvBgB,KAAI,SAACrB,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,WAAYA,EACZC,cAAeA,GAHVF,EAAKG,UCzBLuB,MAZf,WACE,OACE,qCACE,cAACC,EAAD,IACA,eAACvC,EAAD,WACE,iDACA,cAAC,EAAD,WCIOwC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fa6cba3e.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n    * {\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    body {\r\n        background: #FFFFFF;\r\n        color: #000000;\r\n        font-family: 'Manrope', sans-serif;\r\n        font-weight: 700;\r\n        margin: 0;\r\n    }\r\n\r\n    h1 {\r\n        font-size: 4rem;\r\n        margin-bottom: 29px;\r\n    }\r\n\r\n    li, h2 {\r\n        font-size: 18px;\r\n    }\r\n\r\n    a {\r\n        color: #00adaa;\r\n    }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainContainer = styled.main`\r\n  width: 1400px;\r\n  padding: 2.5rem 1.25rem;\r\n  margin: 0 auto;\r\n\r\n  @media only screen and (max-width: 1400px) {\r\n    & {\r\n        width: 95%;\r\n    }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  statusLineWidth: number;\r\n}\r\n\r\nexport const OrderedList = styled.ol`\r\n  width: 100%;\r\n  list-style: none;\r\n  counter-reset: tasks-counter;\r\n`;\r\n\r\nexport const OrderedItem = styled.li<Props>`\r\n  width: 100%;\r\n  list-style-position: inside;\r\n  margin-bottom: 20px;\r\n  max-width: 100%;\r\n  counter-increment: tasks-counter;\r\n\r\n  h2 {\r\n    box-shadow: 3px 3px 15px rgba(0, 0, 0, 0.161);\r\n    width: 100%;\r\n\r\n    &:before {\r\n      content: counter(tasks-counter);\r\n      font-size: 36px;\r\n      display: inline-block;\r\n      width: 50px;\r\n      height: 53px;\r\n      text-align: center;\r\n      background: #00adaa;\r\n      background: linear-gradient(180deg, #00a9a7 0%, #00ba89 100%);\r\n      color: white;\r\n      margin: 16px 30px 16px 36px;\r\n    }\r\n\r\n    &:after {\r\n      content: \"\";\r\n      display: block;\r\n      background: #00adaa;\r\n      height: 2px;\r\n      width: ${(props) =>\r\n        props.statusLineWidth ? props.statusLineWidth : 200}px;\r\n      transition: 0.5s all;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nconst iconSize = 21;\r\n\r\nexport const UnorderedList = styled.ul`\r\n  padding: 0 64px;\r\n  line-height: 21px;\r\n  vertical-align: middle;\r\n  overflow: hidden;\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: 400;\r\n  animation: toggleSubStep 1s forwards linear;\r\n\r\n  li {\r\n    margin: 0;\r\n    margin-top: 20px;\r\n    padding-left: calc(${iconSize}px + 21px);\r\n    list-style: none;\r\n    background-image: url(\"./images/radio.svg\");\r\n    background-repeat: no-repeat;\r\n    background-position: left center;\r\n    background-size: ${iconSize}px;\r\n  }\r\n\r\n  @keyframes toggleSubStep{\r\n    0% {\r\n      opacity: 0,\r\n      height: 0\r\n    }\r\n    100% {\r\n      opacity: 1\r\n      height: 200px\r\n    }\r\n  }\r\n`;\r\n","import Linkify from \"react-linkify\";\r\nimport { useRef } from \"react\";\r\nimport { OrderedItem } from \"./styled/OrderedList.styled\";\r\nimport { UnorderedList } from \"./styled/UnorderedList.styled\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\ninterface Props {\r\n  step: {\r\n    id: number;\r\n    title: string;\r\n    subSteps: string[];\r\n  };\r\n  activeStep: number;\r\n  setActiveStep: React.Dispatch<number>;\r\n}\r\n\r\nconst Step: React.FC<Props> = ({ step, activeStep, setActiveStep }) => {\r\n  const { id, title, subSteps } = step;\r\n  const isActive = id === activeStep;\r\n\r\n  const ulRef = useRef<HTMLUListElement>(null);\r\n  const ulHeight = ulRef.current ? ulRef.current.scrollHeight : 0;\r\n  const AnimatedUl = animated(UnorderedList);\r\n\r\n  const expand = useSpring({\r\n    height: isActive ? ulHeight : 0,\r\n    opacity: isActive ? 1 : 0,\r\n  });\r\n\r\n  return (\r\n    <Linkify>\r\n      <OrderedItem\r\n        onClick={() => (!isActive ? setActiveStep(id) : setActiveStep(0))}\r\n        statusLineWidth={!isActive ? 200 : 300}\r\n      >\r\n        <h2>{title}</h2>\r\n        <AnimatedUl ref={ulRef} style={expand}>\r\n          {subSteps.map((subStep, index) => (\r\n            <li key={index}>{subStep}</li>\r\n          ))}\r\n        </AnimatedUl>\r\n      </OrderedItem>\r\n    </Linkify>\r\n  );\r\n};\r\n\r\nexport default Step;\r\n","import { useState } from \"react\";\r\nimport { OrderedList } from \"./styled/OrderedList.styled\";\r\nimport Step from \"./Step\";\r\n\r\nconst StepsList: React.FC = () => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n\r\n  const steps = [\r\n    {\r\n      id: 1,\r\n      title: \"Build test task\",\r\n      subSteps: [\r\n        \"Create repository\",\r\n        \"Implement designs\",\r\n        \"Implement functionality\",\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Submit your test task\",\r\n      subSteps: [\r\n        \"Open email client\",\r\n        \"Sent link with information to careers@cornercasetech.com\",\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Participate in tech interview\",\r\n      subSteps: [\"Talk with HR\", \"Talk with Tech team\"],\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Receive answer\",\r\n      subSteps: [\"Receive answers\", \"Start your IT career\"],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <OrderedList>\r\n      {steps.map((step) => (\r\n        <Step\r\n          key={step.id}\r\n          step={step}\r\n          activeStep={activeStep}\r\n          setActiveStep={setActiveStep}\r\n        />\r\n      ))}\r\n    </OrderedList>\r\n  );\r\n};\r\n\r\nexport default StepsList;\r\n","import GlobalStyles from \"./components/styled/Global\";\nimport { MainContainer } from \"./components/styled/MainContainer.styled\";\nimport StepsList from \"./components/StepsList\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <MainContainer>\n        <h1>CCT Lab Process</h1>\n        <StepsList />\n      </MainContainer>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}